<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-10T15:08:38 IST" name="Default suite" finished-at="2023-07-10T15:08:39 IST" duration-ms="866">
    <groups>
    </groups>
    <test started-at="2023-07-10T15:08:38 IST" name="Default test" finished-at="2023-07-10T15:08:39 IST" duration-ms="866">
      <class name="hrm.headtest.CorporateTest">
        <test-method is-config="true" signature="Openbrowser()[pri:0, instance:hrm.headtest.CorporateTest@6572421]" started-at="2023-07-10T15:08:38 IST" name="Openbrowser" finished-at="2023-07-10T15:08:39 IST" duration-ms="754" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable Unable to locate the geckodriver executable; for more information on how to install drivers, see https://www.selenium.dev/documentation/webdriver/getting_started/install_drivers/]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable Unable to locate the geckodriver executable; for more information on how to install drivers, see https://www.selenium.dev/documentation/webdriver/getting_started/install_drivers/
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
at org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:139)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:131)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at com.hrm.genric.BaseClass.Openbrowser(BaseClass.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Openbrowser -->
        <test-method is-config="true" signature="login()[pri:0, instance:hrm.headtest.CorporateTest@6572421]" started-at="2023-07-10T15:08:39 IST" name="login" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688981919448" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="Corporate()[pri:0, instance:hrm.headtest.CorporateTest@6572421]" started-at="2023-07-10T15:08:39 IST" name="Corporate" finished-at="2023-07-10T15:08:39 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable Unable to locate the geckodriver executable; for more information on how to install drivers, see https://www.selenium.dev/documentation/webdriver/getting_started/install_drivers/]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable Unable to locate the geckodriver executable; for more information on how to install drivers, see https://www.selenium.dev/documentation/webdriver/getting_started/install_drivers/
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:314)
at org.openqa.selenium.remote.service.DriverFinder.getPath(DriverFinder.java:33)
at org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:139)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:131)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at com.hrm.genric.BaseClass.Openbrowser(BaseClass.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Corporate -->
        <test-method is-config="true" signature="logout()[pri:0, instance:hrm.headtest.CorporateTest@6572421]" started-at="2023-07-10T15:08:39 IST" name="logout" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688981919459" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="Closebrowser()[pri:0, instance:hrm.headtest.CorporateTest@6572421]" started-at="2023-07-10T15:08:39 IST" name="Closebrowser" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688981919463" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closebrowser -->
      </class> <!-- hrm.headtest.CorporateTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
